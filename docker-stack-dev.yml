version: "3"

services:

    web:
        image: crx/web-dev
        networks:
            - front_network
        ports:
            - 5000:5000 # The first number is the external port and can be changed, e.g., to 80:5000 (the second number must not be changed)
        volumes:
            - /services/web-dev/static:/app/static
            - /services/web-dev/app:/app # must be mounted here, because of the location of run_dev.py
            - /volumes/whitebox_program_uploads:/uploads
        environment:
            - DEBUG=True # Must be set to false in production
            - RECAPTCHA_PUBLIC_KEY=6Le3QBoUAAAAANKiIexuJsV5XE_HjgqICK2kHGCb
            - RECAPTCHA_PRIVATE_KEY=6Le3QBoUAAAAALLIh0LrUMsIT8F1lV5fr3eqzj4x
            - SECRET_KEY=da39a3ee5e6b4b0d3255bfef95601890afd80709
            - MYSQL_DATABASE=db_wb
            - MYSQL_USER=user_wb
            - MYSQL_PASSWORD=a_not_so_random_user_password
            - MYSQL_HOST=mysql
            - MYSQL_PORT=3306
            - UPLOAD_FOLDER=/uploads
            - URL_COMPILE_AND_TEST=http://launcher:5000/compile_and_test
            - STARTING_DATE=1552867200    # In seconds since EPOCH. Must be identical in the launcher service. 18/03/2019 00:00 UTC is 1552867200
            - POSTING_DEADLINE=1564617600 # In seconds since EPOCH. Must be identical in the launcher service. 01/08/2019 00:00 UTC is 1564617600
            - FINAL_DEADLINE=1566345600   # In seconds since EPOCH. Must be identical in the launcher service. 21/08/2019 00:00 UTC is 1566345600
            - CHALLENGE_MAX_SOURCE_SIZE_IN_MB=50         # In MB. Must be identical in the launcher service. Must be 50 in production.
            - CHALLENGE_MAX_MEM_COMPILATION_IN_MB=500    # In MB. Must be identical in the launcher service. Must be 500 in production.
            - CHALLENGE_MAX_TIME_COMPILATION_IN_SECS=100 # In seconds. Must be identical in the launcher service. Must be 100 in production.
            - CHALLENGE_MAX_BINARY_SIZE_IN_MB=20         # In MB. Must be identical in the launcher service. Must be 20 in production.
            - CHALLENGE_MAX_MEM_EXECUTION_IN_MB=20       # In MB. Must be identical in the launcher service. Must be 20 in production.
            - CHALLENGE_MAX_TIME_EXECUTION_IN_SECS=1     # In seconds. Must be identical in the launcher service. Must be 1 in production.
            - CHALLENGE_NUMBER_OF_TEST_VECTORS=100       # Must be identical in the launcher service. Must be at least 1000 in production.
        deploy:
            placement:
                constraints: [node.labels.vm == node-manager]



    launcher:
        image: crx/launcher-dev
        networks:
            - front_network
            - back_network
        ports:
            - 5001:5000
        volumes:
            - /services/launcher-dev/app:/app # must be mounted here, because of the location of run_dev.py
            - /var/run/docker.sock:/var/run/docker.sock
            - /volumes/whitebox_program_uploads:/uploads:ro
            - /volumes/whitebox_program_uploads/compilations:/compilations
        environment:
            - DEBUG=True
            - MYSQL_DATABASE=db_wb
            - MYSQL_USER=user_wb
            - MYSQL_PASSWORD=a_not_so_random_user_password # Must be identical in web, launcher and mysql services.
            - MYSQL_HOST=mysql
            - MYSQL_PORT=3306
            - SOCK=unix:///var/run/docker.sock
            - NAME_OF_COMPILE_AND_TEST_SERVICE=dev_compile_and_test
            - COMPILE_AND_TEST_SERVICE_NETWORK=dev_back_network
            - STARTING_DATE=1552867200    # In seconds since EPOCH. Must be identical in the web service. 18/03/2019 00:00 UTC is 1552867200
            - POSTING_DEADLINE=1564617600 # In seconds since EPOCH. Must be identical in the web service. 01/08/2019 00:00 UTC is 1564617600
            - FINAL_DEADLINE=1566345600   # In seconds since EPOCH. Must be identical in the web service. 21/08/2019 00:00 UTC is 1566345600
            - CHALLENGE_MAX_SOURCE_SIZE_IN_MB=50         # In MB. Must be identical in the web service. Must be 50 in production.
            - CHALLENGE_MAX_MEM_COMPILATION_IN_MB=500    # In MB. Must be identical in the web service. Must be 500 in production.
            - CHALLENGE_MAX_TIME_COMPILATION_IN_SECS=100 # In seconds. Must be identical in the web service. Must be 100 in production.
            - CHALLENGE_MAX_BINARY_SIZE_IN_MB=20         # In MB. Must be identical in the web service. Must be 20 in production.
            - CHALLENGE_MAX_MEM_EXECUTION_IN_MB=20       # In MB. Must be identical in the web service. Must be 20 in production.
            - CHALLENGE_MAX_TIME_EXECUTION_IN_SECS=1     # In seconds. Must be identical in the web service. Must be 1 in production.
            - CHALLENGE_NUMBER_OF_TEST_VECTORS=100       # Must be identical in the web service. Must be at least 1000 in production.

        deploy:
            placement:
                constraints: [node.labels.vm == node-manager]



    mysql:
        image: "crx/mysql:${MYSQL_VERSION}"
        command: "--innodb-use-native-aio=0 --default-authentication-plugin=mysql_native_password --mysqlx=0"
        networks:
            - front_network
        volumes:
            - /volumes/database:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=a_not_so_random_root_password
            - MYSQL_DATABASE=db_wb # specify the name of a database to be created on image startup (does nothing if the db already exists).
            - MYSQL_USER=user_wb # This user will be granted superuser permissions for the database specified by the MYSQL_DATABASE variable.
            - MYSQL_PASSWORD=a_not_so_random_user_password # Must be identical in web, launcher and mysql services.
            - MYSQL_ALLOW_EMPTY_PASSWORD=no
        deploy:
            placement:
                constraints: [node.labels.vm == node-manager]



    # visualizer:
    #     image: manomarks/visualizer
    #     networks:
    #         - main_network
    #     ports:
    #         - 8080:8080
    #     volumes:
    #         - /var/run/docker.sock:/var/run/docker.sock
    #     deploy:
    #         placement:
    #             constraints: [node.labels.vm == node-manager]




networks:
    front_network:
    back_network:
